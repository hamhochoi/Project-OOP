

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package thanh.View;

import java.awt.event.ItemEvent;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import thanh.Model.ChiPhiPhatSinh;
import thanh.Model.HangDaBan;
import thanh.Model.NhanVien;
import thanh.Model.TruyCapCoSoDuLieu;
import thanh.Model.WriteObjectToFile;

/**
 *
 * @author Do Chi Thanh
 */
public class ManagerViewer extends javax.swing.JFrame {

    /**
     * Creates new form Manager
     */
    private int day1 = 0, month1 = 0, year1 = 0;
    private int day2 = 0, month2 = 0, year2 = 0;
    private int ngayChiPhi;
    private int thangChiPhi;
    private int namChiPhi;
    private String loaiChiPhi = null;
    private String tenChiPhi = null;
    private double soTien = 0;
    private double tienLuong = 0;
    
//    DefaultTableModel dtm = new DefaultTableModel();
//    ArrayList<String> arrColumn = new ArrayList<>();
//    ArrayList<String> arrRow = new ArrayList<>();
    ArrayList<ChiPhiPhatSinh> themPhatSinh = new ArrayList<ChiPhiPhatSinh>();
    
    public ManagerViewer() {
        setVisible(true);
        setResizable(false);
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocation(320, 60);
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        doanhThuButton = new javax.swing.JButton();
        loiNhuanButton = new javax.swing.JButton();
        tienLuongButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        thongKeTable = new javax.swing.JTable();
        ngay1ComboBox = new javax.swing.JComboBox<>();
        thang1ComboBox = new javax.swing.JComboBox<>();
        nam1ComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chiPhiButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ngay2ComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        thang2ComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        nam2ComboBox1 = new javax.swing.JComboBox<>();
        QuayLaiButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        themChiPhiButton = new javax.swing.JButton();
        loaiChiPhiComboBox = new javax.swing.JComboBox<>();
        tenChiPhiTextField = new javax.swing.JTextField();
        soTienTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chiPhiTable = new javax.swing.JTable();
        saveButton = new javax.swing.JButton();
        ngayChiPhiComboBox = new javax.swing.JComboBox<>();
        thangChiPhiComboBox = new javax.swing.JComboBox<>();
        namChiPhiComboBox = new javax.swing.JComboBox<>();
        QuayLaiButton1 = new javax.swing.JButton();
        QuayLaiChiPhiButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        doanhThuButton.setText("Doanh Thu");

        loiNhuanButton.setText("Lợi nhuận");

        tienLuongButton.setText("Tiền lương nhân viên");

        thongKeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tên sản phẩm", "ID ", "Số lượng", "Giá mua", "Giá bán", "Thời gian"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        thongKeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(thongKeTable);
        if (thongKeTable.getColumnModel().getColumnCount() > 0) {
            thongKeTable.getColumnModel().getColumn(0).setResizable(false);
            thongKeTable.getColumnModel().getColumn(1).setResizable(false);
            thongKeTable.getColumnModel().getColumn(2).setResizable(false);
            thongKeTable.getColumnModel().getColumn(3).setResizable(false);
            thongKeTable.getColumnModel().getColumn(4).setResizable(false);
            thongKeTable.getColumnModel().getColumn(5).setResizable(false);
        }

        final DefaultComboBoxModel days1 = new DefaultComboBoxModel();

        days1.addElement(null);

        for (int i=1; i<32; i++){
            days1.addElement(i);
        }
        ngay1ComboBox.setModel(days1);

        final DefaultComboBoxModel months1 = new DefaultComboBoxModel();

        months1.addElement(null);

        for (int i=1; i<13; i++){
            months1.addElement(i);
        }
        thang1ComboBox.setModel(months1);

        final DefaultComboBoxModel years1 = new DefaultComboBoxModel();

        years1.addElement(null);

        for (int i=1996; i< 2100; i++){
            years1.addElement(i);
        }
        nam1ComboBox.setModel(years1);

        jLabel1.setText("Ngày");

        jLabel2.setText("Tháng");

        jLabel3.setText("Năm");

        chiPhiButton.setText("Chi phí");

        jLabel4.setText("Từ :");

        jLabel5.setText("Đến :");

        jLabel6.setText("Ngày");

        final DefaultComboBoxModel days2 = new DefaultComboBoxModel();

        days2.addElement(null);

        for (int i=1; i<32; i++){
            days2.addElement(i);
        }
        ngay2ComboBox1.setModel(days2);

        jLabel7.setText("Tháng");

        final DefaultComboBoxModel months2 = new DefaultComboBoxModel();

        months2.addElement(null);

        for (int i=1; i<13; i++){
            months2.addElement(i);
        }
        thang2ComboBox1.setModel(months2);

        jLabel8.setText("Năm");

        final DefaultComboBoxModel years2 = new DefaultComboBoxModel();

        years2.addElement(null);

        for (int i=1996; i< 2100; i++){
            years2.addElement(i);
        }
        nam2ComboBox1.setModel(years2);

        QuayLaiButton.setText("Quay lại");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doanhThuButton)
                    .addComponent(tienLuongButton)
                    .addComponent(loiNhuanButton)
                    .addComponent(chiPhiButton)
                    .addComponent(QuayLaiButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(ngay1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(ngay2ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(thang1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(thang2ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(nam1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(nam2ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chiPhiButton, doanhThuButton, loiNhuanButton, tienLuongButton});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel4, jLabel5});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(doanhThuButton)
                .addGap(67, 67, 67)
                .addComponent(loiNhuanButton)
                .addGap(68, 68, 68)
                .addComponent(chiPhiButton)
                .addGap(75, 75, 75)
                .addComponent(tienLuongButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ngay1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thang1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nam1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(QuayLaiButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(ngay2ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(thang2ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(nam2ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {chiPhiButton, doanhThuButton, loiNhuanButton, tienLuongButton});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, jLabel5});

        jTabbedPane1.addTab("Thống kê", jPanel3);

        themChiPhiButton.setText("Thêm chi phí");

        loaiChiPhiComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","Chi phí phát sinh " }));

        jLabel9.setText("Loại chi phí");

        jLabel10.setText("Tên chi phí");

        jLabel11.setText("Số tiền");

        jLabel12.setText("Ngày");

        chiPhiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên chi phí", "Loại chi phí", "Số tiền", "Ngày"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chiPhiTable.getTableHeader().setReorderingAllowed(false);
        boolean[] canEdit = new boolean [] {
            false, false, false, false
        };
        jScrollPane2.setViewportView(chiPhiTable);
        if (chiPhiTable.getColumnModel().getColumnCount() > 0) {
            chiPhiTable.getColumnModel().getColumn(0).setResizable(false);
            chiPhiTable.getColumnModel().getColumn(1).setResizable(false);
            chiPhiTable.getColumnModel().getColumn(2).setResizable(false);
            chiPhiTable.getColumnModel().getColumn(3).setResizable(false);
        }

        saveButton.setText("Save");

        DefaultComboBoxModel stringNgay = new DefaultComboBoxModel();

        stringNgay.addElement("Ngày");

        for (int i=1; i<=31; i++){
            stringNgay.addElement(i);
        }
        ngayChiPhiComboBox.setModel(stringNgay);

        DefaultComboBoxModel stringThang = new DefaultComboBoxModel();

        stringThang.addElement("Tháng");

        for (int i=1; i<=12; i++){
            stringThang.addElement(i);
        }
        thangChiPhiComboBox.setModel(stringThang);

        DefaultComboBoxModel stringNam = new DefaultComboBoxModel();

        stringNam.addElement("Năm");

        for (int i=1996; i<=2099; i++){
            stringNam.addElement(i);
        }
        namChiPhiComboBox.setModel(stringNam);

        QuayLaiButton1.setText("Quay lại");

        QuayLaiChiPhiButton.setText("Quay lại");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(54, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tenChiPhiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(soTienTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel9))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(ngayChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(52, 52, 52)
                                        .addComponent(thangChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(namChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(loaiChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(themChiPhiButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(51, 51, 51))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QuayLaiChiPhiButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(QuayLaiButton1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {saveButton, themChiPhiButton});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {soTienTextField, tenChiPhiTextField});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QuayLaiChiPhiButton)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(themChiPhiButton)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loaiChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(tenChiPhiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(ngayChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(soTienTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(thangChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namChiPhiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addGap(37, 37, 37))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(QuayLaiButton1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {saveButton, themChiPhiButton});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {soTienTextField, tenChiPhiTextField});

        jTabbedPane1.addTab("Chi phí", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    /**/
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ManagerViewer manager = new ManagerViewer();
//                manager.setVisible(true);
//                manager.setSize(800,600);
//                manager.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//                manager.setLocation(320,60);
//          
//            }
//        });
//    }
    // Load Table
// Bỏ hàm này vì sử dụng cơ sở dữ liệu
    public void loadThongKeTable(String tbName, JTable tb) {
        try {
            TruyCapCoSoDuLieu csdl = new TruyCapCoSoDuLieu();
            thanh.Model.Manager manager = new thanh.Model.Manager();
            ResultSet result;
            // Thêm vào 3 cột ngày, tháng, năm
            String message = "select *,Extract(day from Thời_gian),Extract(month from Thời_gian),Extract(year from Thời_gian) from " + tbName;
            result = csdl.truyCapCoSoDuLieu().executeQuery(message);

            ResultSetMetaData metadata = result.getMetaData();

            int count = metadata.getColumnCount() - 3;        // Không tính 3 cột ngày tháng năm
            ArrayList<String> arrColumn = new ArrayList<String>();

            for (int i = 1; i <= count; i++) {
                arrColumn.add(metadata.getColumnName(i));
            }

            DefaultTableModel dtm = new DefaultTableModel();
            dtm.addColumn(arrColumn);
            dtm.setColumnIdentifiers(arrColumn.toArray());
            ArrayList<String> arrRow = new ArrayList<String>();

            while (result.next()) {

                int day = result.getInt(count + 1);
                int month = result.getInt(count + 2);
                int year = result.getInt(count + 3);

                if (year < year1) {
                    continue;
                } else if (year == year1) {
                    if (month < month1) {
                        continue;
                    } else if (month == month1) {
                        if (day < day1) {
                            continue;
                        }
                    }
                }

                if (year > year2) {
                    continue;
                } else if (year == year2) {
                    if (month > month2) {
                        continue;
                    } else if (month == month2) {
                        if (day > day2) {
                            continue;
                        }
                    }
                }

                for (int i = 1; i <= count; i++) {
                    arrRow.add(result.getString(i));
                }
                dtm.addRow(arrRow.toArray());
                arrRow.clear();
            }
            tb.setModel(dtm);

        } catch (SQLException ex) {
            Logger.getLogger(ManagerViewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
// Dùng hàm này
    public void loadThongKeTable(ArrayList<HangDaBan> list, JTable tb) {
        ArrayList<String> col = new ArrayList<String>();
        col.add("STT");
        col.add("Tên sản phẩm");
        col.add("ID");
        col.add("Số lượng");
        col.add("Giá mua");
        col.add("Giá bán");
        col.add("Thời gian");

        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn(col);
        dtm.setColumnIdentifiers(col.toArray());

        ArrayList row = new ArrayList();

        for (int i=0; i<list.size(); i++) {
            int day = list.get(i).getNgayBan();
            int month = list.get(i).getThangBan();
            int year = list.get(i).getNamBan();

            if (year < year1) {
                continue;
            } else if (year == year1) {
                if (month < month1) {
                    continue;
                } else if (month == month1) {
                    if (day < day1) {
                        continue;
                    }
                }
            }

            if (year > year2) {
                continue;
            } else if (year == year2) {
                if (month > month2) {
                    continue;
                } else if (month == month2) {
                    if (day > day2) {
                        continue;
                    }
                }
            }
            row.add(i+1);
            row.add(list.get(i).getTen());
            row.add(list.get(i).getId());
            row.add(list.get(i).getSoLuong());
            row.add(list.get(i).getGiaMua());
            row.add(list.get(i).getGiaBan());
            String str = Integer.toString(list.get(i).getNgayBan())+ "/" + Integer.toString(list.get(i).getThangBan())+ "/" + Integer.toString(list.get(i).getNamBan());
            row.add(str);
            dtm.addRow(row.toArray());
            row.clear();
        }
        tb.setModel(dtm);

    }
// Dùng hàm này  
    public void loadThongKeChiPhiTable(ArrayList<ChiPhiPhatSinh> list, JTable tb) {
        ArrayList<String> col = new ArrayList<String>();
        col.add("STT");
        col.add("Tên");
        col.add("Loại chi phí");
        col.add("Số tiền");
        col.add("Thời gian");

        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn(col);
        dtm.setColumnIdentifiers(col.toArray());

        ArrayList row = new ArrayList();

        for (int i=0; i<list.size(); i++){
            int day = list.get(i).getNgayChiPhi();
            int month = list.get(i).getThangChiPhi();
            int year = list.get(i).getNamChiPhi();

            if (year < year1) {
                continue;
            } else if (year == year1) {
                if (month < month1) {
                    continue;
                } else if (month == month1) {
                    if (day < day1) {
                        continue;
                    }
                }
            }

            if (year > year2) {
                continue;
            } else if (year == year2) {
                if (month > month2) {
                    continue;
                } else if (month == month2) {
                    if (day > day2) {
                        continue;
                    }
                }
            }
            row.add(i+1);
            row.add(list.get(i).getTen());
            row.add(list.get(i).getLoaiChiPhi());
            row.add(list.get(i).getSoTien());
            String str = Integer.toString(list.get(i).getNgayChiPhi()) + Integer.toString(list.get(i).getThangChiPhi()) + Integer.toString(list.get(i).getNamChiPhi());
            row.add(str);
            dtm.addRow(row.toArray());
            row.clear();

        }
        tb.setModel(dtm);

    }
// Bỏ hàm này do sử dụng cơ sở dữ liệu
    public void loadChiPhiTable(String tbName, JTable tb) throws Exception {

        if (ngayChiPhi == 0 || thangChiPhi == 0 || namChiPhi == 0 || loaiChiPhi == null) {
            throw new Exception();
        }

        DefaultTableModel dtm = new DefaultTableModel();
        // Tạo các cột cho table
        ArrayList<String> arrColumn = new ArrayList<>();

        arrColumn.add("Tên");
        arrColumn.add("Loại chi phí");
        arrColumn.add("Số tiền");
        arrColumn.add("Thời gian");
        dtm.setColumnIdentifiers(arrColumn.toArray());

        // Tạo các bảng cho table
        ArrayList<String> arrRow = new ArrayList<>();

        arrRow.add(tenChiPhi);
        arrRow.add(loaiChiPhi);
        arrRow.add(Double.toString(soTien));
        arrRow.add(Integer.toString(ngayChiPhi) + "-" + Integer.toString(thangChiPhi) + "-" + Integer.toString(namChiPhi));
        dtm.addRow(arrRow.toArray());

        tb.setModel(dtm);
    }
// Dùng hàm này
    public void loadChiPhiTable(ArrayList<ChiPhiPhatSinh> themPhatSinh) throws Exception {

        if (ngayChiPhi == 0 || thangChiPhi == 0 || namChiPhi == 0 || loaiChiPhi == null) {
            throw new Exception();
        }

        DefaultTableModel dtm = new DefaultTableModel();
        // Tạo các cột cho table
        ArrayList<String> arrColumn = new ArrayList<>();
        arrColumn.add("STT");
        arrColumn.add("Tên");
        arrColumn.add("Loại chi phí");
        arrColumn.add("Số tiền");
        arrColumn.add("Thời gian");
        dtm.addColumn(arrColumn);
        dtm.setColumnIdentifiers(arrColumn.toArray());

        // Tạo các bảng cho table
        ArrayList arrRow = new ArrayList();
        
        for (int i=0; i<themPhatSinh.size(); i++){
            arrRow.add(i+1);
            arrRow.add(themPhatSinh.get(i).getTen());
            arrRow.add(themPhatSinh.get(i).getLoaiChiPhi() );
            arrRow.add(themPhatSinh.get(i).getSoTien() );
            arrRow.add(themPhatSinh.get(i).getNgayChiPhi() + "-" + themPhatSinh.get(i).getThangChiPhi() + "-" + themPhatSinh.get(i).getNamChiPhi() );
            dtm.addRow(arrRow.toArray());
            arrRow.clear();
        }
        getChiPhiTable().setModel(dtm);
    }

    // ComboBox
    public void ngay1ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            day1 = (int) evt.getItem();
            //view.setDay1(day1);
        }
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            day1 = 0;
            //view.setDay1(day1);
        }

    }

    public void thang1ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            month1 = (int) evt.getItem();
            //view.setMonth1(month1);
        }
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            month1 = 0;
            //view.setMonth1(month1);        
        }
    }

    public void nam1ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            year1 = (int) evt.getItem();
            //view.setYear1(year1);
        }
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            year1 = 0;
            //view.setYear1(year1);
        }
    }

    public void ngay2ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            day2 = (int) evt.getItem();
            //view.setDay2(day2);
        }
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            day2 = 0;
            //view.setDay2(day2);
        }
    }

    public void thang2ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            month2 = (int) evt.getItem();
            //view.setMonth2(month2);
        }
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            month2 = 0;
            //view.setMonth2(month2);
        }
    }

    public void nam2ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            year2 = (int) evt.getItem();
            //view.setYear2(year2);
        }
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            year2 = 0;
            //view.setYear2(year2);
        }
    }

    public void loaiChiPhiComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            loaiChiPhi = (String) evt.getItem();
//            view.setLoaiChiPhi(loaiChiPhi);
        }

    }

    public void ngayChiPhiComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ngayChiPhi = (int) evt.getItem();
//            view.setNgayChiPhi(ngayChiPhi);
        }
    }

    public void thangChiPhiComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            thangChiPhi = (int) evt.getItem();
//            view.setThangChiPhi(thangChiPhi);
        }
    }

    public void namChiPhiComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            namChiPhi = (int) evt.getItem();
//            view.setNamChiPhi(namChiPhi);
        }
    }

    // Button
    public void doanhThuButtonActionPerformed(ArrayList<HangDaBan> listHangDaBan, java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JTable thongKeTable = getThongKeTable();
        thanh.Model.Manager manager = new thanh.Model.Manager();
//        System.out.println(day1+" " + month1 + " " + year1);
//        System.out.println(day2+" " + month2 + " " + year2);

        double doanhThu = manager.tinhDoanhThu(listHangDaBan, day1, month1, year1, day2, month2, year2);
        loadThongKeTable(listHangDaBan, thongKeTable);
        JOptionPane.showMessageDialog(null, "Doanh thu đạt được là: " + doanhThu / 1000000 + " triệu đồng");

    }

    public void loiNhuanButtonActionPerformed(ArrayList<HangDaBan> listHangDaBan, java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JTable thongKeTable = getThongKeTable();
        thanh.Model.Manager manager = new thanh.Model.Manager();
//        System.out.println(day1+" " + month1 + " " + year1);
//        System.out.println(day2+" " + month2 + " " + year2);

        double loiNhuan = manager.tinhLoiNhuan(listHangDaBan, day1, month1, year1, day2, month2, year2);
        loadThongKeTable(listHangDaBan, thongKeTable);
        JOptionPane.showMessageDialog(null, "Lợi nhuận đạt được là: " + loiNhuan / 1000000 + " triệu đồng");
    }

    public void chiPhiButtonActionPerformed(ArrayList<ChiPhiPhatSinh> listPhatSinh, java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JTable thongKeTable = getThongKeTable();
        thanh.Model.Manager manager = new thanh.Model.Manager();
//        System.out.println(day1+" " + month1 + " " + year1);
//        System.out.println(day2+" " + month2 + " " + year2);

        double chiPhi = manager.tinhChiPhiPhatSinh(listPhatSinh, day1, month1, year1, day2, month2, year2);
        chiPhi = chiPhi + manager.tinhChiPhiDinhKy(day1, month1, year1, day2, month2, year2);
        loadThongKeChiPhiTable(listPhatSinh, thongKeTable);
        JOptionPane.showMessageDialog(null, "Chi phí là: " + chiPhi / 1000000 + " triệu đồng");

    }

    public void tienLuongButtonActionPerformed(ArrayList<NhanVien> nhanVien, java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        thanh.Model.Manager manager = new thanh.Model.Manager();
//        System.out.println(day1+" " + month1 + " " + year1);
//        System.out.println(day2+" " + month2 + " " + year2);

        tienLuong = manager.tinhTienLuong(nhanVien, day1, month1, year1, day2, month2, year2);
        JOptionPane.showMessageDialog(null, "Tiền lương của nhân viên là : " + tienLuong / 1000000 + " triệu đồng");
    }

    public void themChiPhiButtonActionPerformed(java.awt.event.ActionEvent evt){
        tenChiPhi = tenChiPhiTextField.getText();
        soTien = Double.parseDouble(soTienTextField.getText());
        ChiPhiPhatSinh phatSinh = new ChiPhiPhatSinh(tenChiPhi, loaiChiPhi, soTien, ngayChiPhi, thangChiPhi, namChiPhi);
        try{
            themPhatSinh.add(phatSinh) ;
            loadChiPhiTable(themPhatSinh);
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Chưa nhập đủ hoặc nhập sai thông tin, vui lòng điền lại!");
            System.out.println(e);
        }
    }
    public void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        thanh.Model.Manager manager = new thanh.Model.Manager();
        ChiPhiPhatSinh cpPhatSinh;
        cpPhatSinh = manager.themChiPhiPhatSinh(tenChiPhi, soTien, loaiChiPhi, ngayChiPhi, thangChiPhi, namChiPhi);
        if (cpPhatSinh.getTen() == null || cpPhatSinh.getSoTien() == 0 || cpPhatSinh.getLoaiChiPhi() == null
                || cpPhatSinh.getNgayChiPhi() == 0 || cpPhatSinh.getThangChiPhi() == 0 || cpPhatSinh.getNamChiPhi() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa nhập đủ thông tin, vui lòng nhập lại!");
        } else {
            try {
                new WriteObjectToFile().writeObjectToFile(cpPhatSinh);
            } catch (IOException ex) {
                Logger.getLogger(ManagerViewer.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Đã thêm thành công!");
        }
    }

    // TextField
    public void tenChiPhiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        tenChiPhi = getTenChiPhiTextField().getText();
        setTenChiPhi(tenChiPhi);
    }

    public void soTienTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        soTien = Double.parseDouble(getSoTienTextField().getText());
        setSoTien(soTien);

    }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton QuayLaiButton;
    private javax.swing.JButton QuayLaiButton1;
    private javax.swing.JButton QuayLaiChiPhiButton;
    private javax.swing.JButton chiPhiButton;
    private javax.swing.JTable chiPhiTable;
    private javax.swing.JButton doanhThuButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> loaiChiPhiComboBox;
    private javax.swing.JButton loiNhuanButton;
    private javax.swing.JComboBox<String> nam1ComboBox;
    private javax.swing.JComboBox<String> nam2ComboBox1;
    private javax.swing.JComboBox<String> namChiPhiComboBox;
    private javax.swing.JComboBox<String> ngay1ComboBox;
    private javax.swing.JComboBox<String> ngay2ComboBox1;
    private javax.swing.JComboBox<String> ngayChiPhiComboBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField soTienTextField;
    private javax.swing.JTextField tenChiPhiTextField;
    private javax.swing.JComboBox<String> thang1ComboBox;
    private javax.swing.JComboBox<String> thang2ComboBox1;
    private javax.swing.JComboBox<String> thangChiPhiComboBox;
    private javax.swing.JButton themChiPhiButton;
    private javax.swing.JTable thongKeTable;
    private javax.swing.JButton tienLuongButton;
    // End of variables declaration//GEN-END:variables
    public JTable getSanPhamTable() {
        return thongKeTable;
    }

    public int getDay1() {
        return day1;
    }

    public void setDay1(int day1) {
        this.day1 = day1;
    }

    public int getMonth1() {
        return month1;
    }

    public void setMonth1(int month1) {
        this.month1 = month1;
    }

    public int getYear1() {
        return year1;
    }

    public void setYear1(int year1) {
        this.year1 = year1;
    }

    public int getDay2() {
        return day2;
    }

    public void setDay2(int day2) {
        this.day2 = day2;
    }

    public int getMonth2() {
        return month2;
    }

    public void setMonth2(int month2) {
        this.month2 = month2;
    }

    public int getYear2() {
        return year2;
    }

    public void setYear2(int year2) {
        this.year2 = year2;
    }

    public int getNgayChiPhi() {
        return ngayChiPhi;
    }

    public void setNgayChiPhi(int ngayChiPhi) {
        this.ngayChiPhi = ngayChiPhi;
    }

    public int getThangChiPhi() {
        return thangChiPhi;
    }

    public void setThangChiPhi(int thangChiPhi) {
        this.thangChiPhi = thangChiPhi;
    }

    public int getNamChiPhi() {
        return namChiPhi;
    }

    public void setNamChiPhi(int namChiPhi) {
        this.namChiPhi = namChiPhi;
    }

    public String getLoaiChiPhi() {
        return loaiChiPhi;
    }

    public void setLoaiChiPhi(String loaiChiPhi) {
        this.loaiChiPhi = loaiChiPhi;
    }

    public String getTenChiPhi() {
        return tenChiPhi;
    }

    public void setTenChiPhi(String tenChiPhi) {
        this.tenChiPhi = tenChiPhi;
    }

    public double getSoTien() {
        return soTien;
    }

    public void setSoTien(double soTien) {
        this.soTien = soTien;
    }

    public double getTienLuong() {
        return tienLuong;
    }

    public void setTienLuong(double tienLuong) {
        this.tienLuong = tienLuong;
    }

    public JButton getChiPhiButton() {
        return chiPhiButton;
    }

    public void setChiPhiButton(JButton chiPhiButton) {
        this.chiPhiButton = chiPhiButton;
    }

    public JTable getChiPhiTable() {
        return chiPhiTable;
    }

    public void setChiPhiTable(JTable chiPhiTable) {
        this.chiPhiTable = chiPhiTable;
    }

    public JButton getDoanhThuButton() {
        return doanhThuButton;
    }

    public void setDoanhThuButton(JButton doanhThuButton) {
        this.doanhThuButton = doanhThuButton;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel10() {
        return jLabel10;
    }

    public void setjLabel10(JLabel jLabel10) {
        this.jLabel10 = jLabel10;
    }

    public JLabel getjLabel11() {
        return jLabel11;
    }

    public void setjLabel11(JLabel jLabel11) {
        this.jLabel11 = jLabel11;
    }

    public JLabel getjLabel12() {
        return jLabel12;
    }

    public void setjLabel12(JLabel jLabel12) {
        this.jLabel12 = jLabel12;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JLabel getjLabel4() {
        return jLabel4;
    }

    public void setjLabel4(JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    public JLabel getjLabel5() {
        return jLabel5;
    }

    public void setjLabel5(JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    public JLabel getjLabel6() {
        return jLabel6;
    }

    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    public JLabel getjLabel7() {
        return jLabel7;
    }

    public void setjLabel7(JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    public JLabel getjLabel8() {
        return jLabel8;
    }

    public void setjLabel8(JLabel jLabel8) {
        this.jLabel8 = jLabel8;
    }

    public JLabel getjLabel9() {
        return jLabel9;
    }

    public void setjLabel9(JLabel jLabel9) {
        this.jLabel9 = jLabel9;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JPanel getjPanel3() {
        return jPanel3;
    }

    public void setjPanel3(JPanel jPanel3) {
        this.jPanel3 = jPanel3;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JScrollPane getjScrollPane2() {
        return jScrollPane2;
    }

    public void setjScrollPane2(JScrollPane jScrollPane2) {
        this.jScrollPane2 = jScrollPane2;
    }

    public JTabbedPane getjTabbedPane1() {
        return jTabbedPane1;
    }

    public void setjTabbedPane1(JTabbedPane jTabbedPane1) {
        this.jTabbedPane1 = jTabbedPane1;
    }

    public JComboBox<String> getLoaiChiPhiComboBox() {
        return loaiChiPhiComboBox;
    }

    public void setLoaiChiPhiComboBox(JComboBox<String> loaiChiPhiComboBox) {
        this.loaiChiPhiComboBox = loaiChiPhiComboBox;
    }

    public JButton getLoiNhuanButton() {
        return loiNhuanButton;
    }

    public void setLoiNhuanButton(JButton loiNhuanButton) {
        this.loiNhuanButton = loiNhuanButton;
    }

    public JComboBox<String> getNam1ComboBox() {
        return nam1ComboBox;
    }

    public void setNam1ComboBox(JComboBox<String> nam1ComboBox) {
        this.nam1ComboBox = nam1ComboBox;
    }

    public JComboBox<String> getNamChiPhiComboBox() {
        return namChiPhiComboBox;
    }

    public void setNamChiPhiComboBox(JComboBox<String> namChiPhiComboBox) {
        this.namChiPhiComboBox = namChiPhiComboBox;
    }

    public JComboBox<String> getNamComboBox1() {
        return nam2ComboBox1;
    }

    public void setNamComboBox1(JComboBox<String> namComboBox1) {
        this.nam2ComboBox1 = namComboBox1;
    }

    public JComboBox<String> getNgay1ComboBox() {
        return ngay1ComboBox;
    }

    public void setNgay1ComboBox(JComboBox<String> ngay1ComboBox) {
        this.ngay1ComboBox = ngay1ComboBox;
    }

    public JComboBox<String> getNgay2ComboBox1() {
        return ngay2ComboBox1;
    }

    public void setNgay2ComboBox1(JComboBox<String> ngay2ComboBox1) {
        this.ngay2ComboBox1 = ngay2ComboBox1;
    }

    public JComboBox<String> getNgayChiPhiComboBox() {
        return ngayChiPhiComboBox;
    }

    public void setNgayChiPhiComboBox(JComboBox<String> ngayChiPhiComboBox) {
        this.ngayChiPhiComboBox = ngayChiPhiComboBox;
    }

    public JButton getSaveButton() {
        return saveButton;
    }

    public void setSaveButton(JButton saveButton) {
        this.saveButton = saveButton;
    }

    public JTextField getSoTienTextField() {
        return soTienTextField;
    }

    public void setSoTienTextField(JTextField soTienTextField) {
        this.soTienTextField = soTienTextField;
    }

    public JTextField getTenChiPhiTextField() {
        return tenChiPhiTextField;
    }

    public void setTenChiPhiTextField(JTextField tenChiPhiTextField) {
        this.tenChiPhiTextField = tenChiPhiTextField;
    }

    public JComboBox<String> getThang1ComboBox() {
        return thang1ComboBox;
    }

    public void setThang1ComboBox(JComboBox<String> thang1ComboBox) {
        this.thang1ComboBox = thang1ComboBox;
    }

    public JComboBox<String> getThangChiPhiComboBox() {
        return thangChiPhiComboBox;
    }

    public void setThangChiPhiComboBox(JComboBox<String> thangChiPhiComboBox) {
        this.thangChiPhiComboBox = thangChiPhiComboBox;
    }

    public JComboBox<String> getThangComboBox1() {
        return thang2ComboBox1;
    }

    public void setThangComboBox1(JComboBox<String> thangComboBox1) {
        this.thang2ComboBox1 = thangComboBox1;
    }

    public JButton getThemChiPhiButton() {
        return themChiPhiButton;
    }

    public void setThemChiPhiButton(JButton themChiPhiButton) {
        this.themChiPhiButton = themChiPhiButton;
    }

    public JTable getThongKeTable() {
        return thongKeTable;
    }

    public void setThongKeTable(JTable thongKeTable) {
        this.thongKeTable = thongKeTable;
    }

    public JButton getTienLuongButton() {
        return tienLuongButton;
    }

    public void setTienLuongButton(JButton tienLuongButton) {
        this.tienLuongButton = tienLuongButton;
    }

}
